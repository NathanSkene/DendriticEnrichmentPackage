---
title: "DendriticEnrichment"
author: "Nathan Gerald Skene"
date: "20/01/2017"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(cowplot)
R.utils::sourceDirectory("R")
load("Data/pats_orthologs.rda")
```

## Basic use of the compare.dataset function

```{r }
# Compare the two datasets
listN = "dendrite_enriched_transcripts_HGNC_1to1only"
list_path = sprintf("Data/%s.txt",listN)
geneListHGNC = read.csv(list_path,stringsAsFactors = F)[,1][-1]

# LOAD KI MOUSE (using pyramidal SS)
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_allKImouse_wtHypo_MergedStriatal_1to1only_level1_thresh0_trim0.rda"
keepCells = c("astrocytes_ependymal","interneurons","microglia","Oligodendrocytes","pyramidal SS","Oligodendrocyte Precursor")
mouseSS_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="KI",useCell="pyramidal SS",sharedName="Pyramidal Neuron",datasetGroup="Cell")

# LOAD DIVSEQ
ctdFilePath1 = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_DivSeq_level1_thresh0_trim0.rda"
ctdFilePath2 = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_DivSeq_level2_thresh0_trim0.rda"
ctd = EWCE::convert_old_ewce_to_new(ctdFilePath1,ctdFilePath2)
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_DivSeq_1to1only_level1_thresh0_trim0.rda"
keepCells = c("Astrocytes","Hippocampal Interneuron","Microglia","Oligodendrocytes","Hippocampal CA1 Pyramidal Neuron","Oligodendrocyte Precursor")
divseq_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Habib",useCell="Hippocampal CA1 Pyramidal Neuron",sharedName="Pyramidal Neuron",datasetGroup="Nuclei")

# LOAD ALLAN
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_ABI_HUMAN_MTG_FilteredGenes_level1_thresh0_trim0.rda"
keepCells = c("Astrocyte","GABAergic","Glutamatergic","Microglia","Oligo_precursor","Oligodendrocyte")
aba_human_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="human",datasetName="AIBS",useCell="Glutamatergic",sharedName="Pyramidal Neuron",datasetGroup="Nuclei")

# LOAD TASIC
ctdFilePath1 = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_TASIC_level1_thresh0_trim0.rda"
ctdFilePath2 = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_TASIC_level2_thresh0_trim0.rda"
ctd = EWCE::convert_old_ewce_to_new(ctdFilePath1,ctdFilePath2)
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_TASIC_1to1only_level1_thresh0_trim0.rda"
keepCells = c("Astrocytes","Interneurons","Microglia","Oligodendrocytes","Pyramidal Neurons","Oligodendrocyte Precursor Cell")
tasic_mouse_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Tasic",useCell="Pyramidal Neurons",sharedName="Pyramidal Neuron",datasetGroup="Cell")

# LOAD DRONCSEQ-Mouse
ctdFilePath = "/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---Mouse DroncSeq/celltype_data_MouseDroncSeq_level1.rda"
keepCells = c("ASC","exCA","GABA","MG","OPC","ODC")
dronc_mouse_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Dronc Mouse",useCell="exCA",sharedName="Pyramidal Neuron",datasetGroup="Nuclei")

ctd_DivSeq = ctd
save(ctd_DivSeq,file="/Users/natske/Box Sync/MAGMA.Celltyping/data/ctd_DivSeq.Rda")
load("data/ctd_DivSeq.Rda")
usethis::use_data(ctd_DivSeq,overwrite = TRUE)

### NEED TO ADD ERRORS CHECKS FOR WHATEVER HAS GONE WRONG HERE
### ALSO: SWITCH THE SPECIES IN ONE OF THE DATASETS... ENSURE IT ERROR CHECKS FOR THIS

# LOAD DRONCSEQ-Human
load("/Users/natske/Box Sync/MAGMA.Celltyping/data/ctd_DRONC_human.rda")
celltype_data = EWCE::convert_new_ewce_to_old(ctd_DRONC_human,1)
save(celltype_data,file="Data/celltype_data_HumanDroncSeq_level1.rda")
ctdFilePath = "/Users/natske/Box Sync/DendriticEnrichment/Data/celltype_data_HumanDroncSeq_level1.rda"
keepCells = c("ASC","exCA","GABA","MG","OPC","ODC")
dronc_human_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="human",datasetName="Dronc Human",useCell="exCA",sharedName="Pyramidal Neuron",datasetGroup="Nuclei")

# LOAD Zeisel2018
load("/Users/natske/Box Sync/Single Cell Datasets/ConvertJuliensFormat2ctd/data/tidy/ctd_ZieselAllLevels.Rda")
celltype_data = EWCE::convert_new_ewce_to_old(ctd,4)
fileName = "celltype_data_Zeisel2018_level4.rda"
save(celltype_data,file=sprintf("Data/%s",fileName))
ctdFilePath = sprintf("/Users/natske/Box Sync/DendriticEnrichment/Data/%s",fileName)
keepCells = c("Astrocytes","Telencephalon projecting excitatory neurons","Telencephalon inhibitory interneurons","Microglia","Oligodendrocyte precursor cells","Oligodendrocytes")
zeisel2018_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Zeisel 2018",useCell="Telencephalon projecting excitatory neurons",sharedName="Pyramidal Neuron",datasetGroup="Cell")

# LOAD Saunders2018
load("/Users/natske/Box Sync/Single Cell Datasets/ConvertJuliensFormat2ctd/data/tidy/ctd_SaundersWithLvl1.Rda")
celltype_data = EWCE::convert_new_ewce_to_old(ctd,1)
fileName = "celltype_data_Saunders2018_level1.rda"
save(celltype_data,file=sprintf("Data/%s",fileName))
ctdFilePath = sprintf("/Users/natske/Box Sync/DendriticEnrichment/Data/%s",fileName)
keepCells = c("Astrocyte","Pyramidal","Interneuron","Microglia","OPC","Oligodendrocyte")
saunders2018_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Saunders 2018",useCell="Pyramidal",sharedName="Pyramidal Neuron",datasetGroup="Cell")

# LOAD Blue Lake 2018
load("/Users/natske/Box Sync/Single Cell Datasets/BlueLake2018/CellTypeData_BlueLake2018_FrontalCortexOnly.rda")
celltype_data = EWCE::convert_new_ewce_to_old(ctd,1)
fileName = "celltype_data_BlueLakeFrontalCortexOnly_level1.rda"
save(celltype_data,file=sprintf("Data/%s",fileName))
ctdFilePath = sprintf("/Users/natske/Box Sync/DendriticEnrichment/Data/%s",fileName)
keepCells = c("Ast","Ex","In","Mic","OPC","Oli")
lakeFrontal_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="human",datasetName="Lake Frontal",useCell="Ex",sharedName="Pyramidal Neuron",datasetGroup="Nuclei")



# LOAD Blue Lake 2018
load("/Users/natske/Box Sync/Single Cell Datasets/BlueLake2018/CellTypeData_BlueLake2018_VisualCortexOnly.rda")
celltype_data = EWCE::convert_new_ewce_to_old(ctd,1)
fileName = "celltype_data_BlueLakeVisualCortexOnly_level1.rda"
save(celltype_data,file=sprintf("Data/%s",fileName))
ctdFilePath = sprintf("/Users/natske/Box Sync/DendriticEnrichment/Data/%s",fileName)
keepCells = c("Ast","Ex","In","Mic","OPC","Oli")
lakeVisual_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="human",datasetName="Lake Visual",useCell="Ex",sharedName="Pyramidal Neuron",datasetGroup="Nuclei")

```

A basic comparison between two datasets is done as follows:

```{r }
a = compare.datasets(dataset1=mouseSS_dist,dataset2=dronc_human_dist, geneListHGNC=geneListHGNC,orthologs=orthologs,sharedName="Pyramidal Neuron")
plot_grid(a$hist_plot, a$comb_hist_plot, a$boot_plot, labels = c("A", "B", "C"), align = "h")

a = compare.datasets(dataset1=mouseSS_dist,dataset2=saunders2018_dist, geneListHGNC=geneListHGNC,orthologs=orthologs,sharedName="Pyramidal Neuron")
plot_grid(a$hist_plot, a$comb_hist_plot, a$boot_plot, labels = c("A", "B", "C"), align = "h")
```

# Generate the standard dendritic enrichment plot across figures

```{r }
# Merge the datasets into a list
allDataSets = list(mouseSS_dist,divseq_dist,aba_human_dist,tasic_mouse_dist,dronc_mouse_dist,dronc_human_dist,zeisel2018_dist,saunders2018_dist,lakeFrontal_dist,lakeVisual_dist)

res = test_all_comparisons(allDataSets,orthologs,sharedName="Pyramidal Neuron",listN="dendrite_enriched_transcripts_HGNC_1to1only",path = "Data")

```

# Generate the plot of dendritic transcripts [to use in the paper]

```{r }
thePlot = generate_publication_plot_for_single_list(res)
```



# Generate plot comparing each group for loads of different gene lists

```{r }
# Merge the datasets into a list
allDataSets = list(mouseSS_dist,divseq_dist,aba_human_dist,tasic_mouse_dist,dronc_mouse_dist,dronc_human_dist)

# Compare the two datasets
count=0
paths = c("/Users/natske/Google Drive/DiseaseLists","/Users/natske/Datasets that are too large to store elsewhere/Human Phenotype Ontology/GeneLists","/Users/natske/Datasets that are too large to store elsewhere/Human Protein Atlas/GeneLists")
for(path in paths){
    if(path==paths[1]){
        allLists = c("dendrite_enriched_transcripts_HGNC_1to1only","Highest_2000_dNdS_between_hsapiens_and_mmusculus","human_accelated_regions","Leukodystrophy","LysosomalProteins","Mitochondrial Localised Genes from MitoCarta Human","Rbfox_binding","hPSD","FMRP_binding","Lowest_2000_dNdS_between_hsapiens_and_mmusculus","Axon_RGC_ageADULT","CELF4_binding_sites","mir137_targets","MS_MsMap","EXAC_LossOfFunctionIntolerant","Abnormality_of_the_vasculature")
    }else{
        allLists = gsub("\\.txt","",list.files(path))
    }
    for(listN in allLists){
        print(listN)
        res = test_all_comparisons(allDataSets,orthologs,sharedName="Pyramidal Neuron",listN="dendrite_enriched_transcripts_HGNC_1to1only",path = "Data")
        count=count+1; if(count==1){ allRes=res }else{ allRes=rbind(allRes,res) }
    }
}
save(allRes,file="allRes_LotsOfListsWtP.Rda")

library(reshape)
library(reshape2)
signifLists = as.character(unique(allRes[p.adjust(allRes$p,method="BH")<0.05,]$list))
signifRes = allRes[allRes$list %in% signifLists,]
castRes = acast(signifRes, labels~list, value.var="z")

plot(hclust(dist(t(castRes))))

nClust = 3
irisCluster <- kmeans(t(castRes), nClust, nstart = 20, iter.max=10000)
for(i in 1:nClust){
    listNames = names(irisCluster$cluster)[irisCluster$cluster==i]
    subRes = allRes[allRes$list %in% listNames,]

    pdf(file=sprintf("ListDepletion_kclust %s of %s.pdf",i,nClust),width=10,height=10)
    thePlot = ggplot(subRes)+geom_bar(aes(x=labels,y=z,fill=list),stat="identity",position="dodge")+
        facet_wrap(~groupLabels, strip.position = "bottom", scales = "free_x")+
        theme(axis.text.x = element_text(angle = 45, hjust = 1))+
        ylab("z")+xlab("")+ylim(min(allRes$z),max(allRes$z))    
    print(thePlot)
    dev.off()
}

library(mclust)
fit <- Mclust(castRes)
    
#allRes2=allRes[allRes$list!="DRONCSEQ_HGNC_Specificity_exCA",]


thePlot = ggplot(allRes)+geom_bar(aes(x=labels,y=z,fill=list),stat="identity",position="dodge")+
        facet_wrap(~groupLabels, strip.position = "bottom", scales = "free_x")+
        theme(axis.text.x = element_text(angle = 45, hjust = 1))+
        ylab("z")+xlab("")
    
    for(ratio in c(1,1.5,1.8,2.1,2.5)){
        figName=sprintf("/Users/natske/Box Sync/LDSC_Paper/Figures/DendriticDepletion_list_%s_R%s.pdf",listN,ratio)
        save_plot(figName, thePlot, base_aspect_ratio = ratio)
    }
```
















# Use Dronc-Seq vs KI to 'nucleus enriched' transcripts

```{r }
# Calculate differential expression between KI & DroncMouse CA1 neurons
load(file="/Users/natske/Box Sync/Patrick & Julien/RawDataFiles/Mouse_DRONC_RawData.Rda")
DRONC_rawdata$annot = DRONC_rawdata$annot[DRONC_rawdata$annot$level2class=="exCA1",]
DRONC_rawdata$exp = DRONC_rawdata$exp[,DRONC_rawdata$annot$cell_id]
load(file="/Users/natske/Google Drive/DiseaseEnrichment/merged_WITH_HYPO.Rda")
merged_WITH_HYPO$annot = merged_WITH_HYPO$annot[merged_WITH_HYPO$annot$level1class=="pyramidal CA1",]
merged_WITH_HYPO$exp = merged_WITH_HYPO$exp[,merged_WITH_HYPO$annot$cell_id]

# Get shared genes
sharedGenes = intersect(rownames(merged_WITH_HYPO$exp),rownames(DRONC_rawdata$exp))
#highExpGenes = rownames(DRONC_exp)[apply(DRONC_exp,1,mean)>0.5]
highExpGenes = rownames(DRONC_exp)[apply(DRONC_exp,1,mean)>1.1]
sharedHighGenes = intersect(sharedGenes,highExpGenes)
DRONC_exp = round(exp(DRONC_rawdata$exp[sharedHighGenes,]))
KI_exp = merged_WITH_HYPO$exp[sharedHighGenes,]

# Merge the two datasets
annot = data.frame(Dataset=c(rep("KI",dim(KI_exp)[2]),rep("Dronc",dim(DRONC_exp)[2])))
exp = cbind(DRONC_exp,KI_exp)

# Calculate differential expression
library(limma)
mod  = model.matrix(~annot$Dataset)
fit = limma::lmFit(exp,mod)	
eb = limma::eBayes(fit)
tt = limma::topTable(eb, coef="annot$DatasetKI", adjust="BH",number=1000000)
# Note: genes with negative t values are upregulated in Dronc (i.e. H3f3b). Those with positive t are upregulated in KI
nuclei_assumed = c("Nuclei enriched","Calculated by differential expression between pyramidal CA1 of KI and DroncMouse",rownames(tt[order(tt$t,decreasing = TRUE),][1:300,]))
write.table(nuclei_assumed,file="/Users/natske/Google Drive/DiseaseLists/nuclei_assumed.txt",quote=FALSE,row.names = FALSE)
```

# Now test if the nuclei genes are enriched in the other nuclei datasets

```{r }
# For each comparison
listN = "NucleiEnriched"
comparisons$z = rep(0,length(comparisons$labels))
comparisons$p = rep(0,length(comparisons$labels))
for(cc in 1:length(comparisons$labels)){
    dd1 = allDataSets[[comparisons$indexed[1,cc]]]
    dd2 = allDataSets[[comparisons$indexed[2,cc]]]
    a = compare.datasets(dataset1=dd1,dataset2=dd2, geneListMGI=nuclei_assumed,orthologs=orthologs,sharedName="Pyramidal Neuron")
    comparisons$z[cc] = a$values$z
    comparisons$p[cc] = a$values$p
}

res = data.frame(labels=comparisons$labels,groupLabels=comparisons$group_labels,z=comparisons$z)
thePlot = ggplot(res)+geom_bar(aes(x=labels,y=z),stat="identity")+
    facet_wrap(~groupLabels, strip.position = "bottom", scales = "free_x")+
    theme(axis.text.x = element_text(angle = 45, hjust = 1))+
    ylab("z")+xlab("")

for(ratio in c(1,1.5,1.8,2.1,2.5)){
    figName=sprintf("/Users/natske/Box Sync/LDSC_Paper/Figures/NucleiEnriched_list_%s_R%s.pdf",listN,ratio)
    save_plot(figName, thePlot, base_aspect_ratio = ratio)
}
```


# Now test if oligodendrocyte specific genes are depleted in the nuclei data

```{r }
# For each comparison
listN = "barres_HGNC_OPC"
list_path = sprintf("/Users/natske/Google Drive/DiseaseLists/%s.txt",listN)
geneListHGNC = read.csv(list_path,stringsAsFactors = F)[,1][-1]

# LOAD KI MOUSE (using pyramidal SS)
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_allKImouse_wtHypo_MergedStriatal_1to1only_level1_thresh0_trim0.rda"
keepCells = c("astrocytes_ependymal","interneurons","microglia","Oligodendrocytes","pyramidal SS","Oligodendrocyte Precursor")
mouseSS_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="KI",useCell="Oligodendrocytes",sharedName="Oligodendrocytes",datasetGroup="Cell")

# LOAD DIVSEQ
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_DivSeq_1to1only_level1_thresh0_trim0.rda"
keepCells = c("Astrocytes","Hippocampal Interneuron","Microglia","Oligodendrocytes","Hippocampal CA1 Pyramidal Neuron","Oligodendrocyte Precursor")
divseq_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Habib",useCell="Oligodendrocytes",sharedName="Oligodendrocytes",datasetGroup="Nuclei")

# LOAD ALLAN
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_ABI_HUMAN_MTG_FilteredGenes_level1_thresh0_trim0.rda"
keepCells = c("Astrocyte","GABAergic","Glutamatergic","Microglia","Oligo_precursor","Oligodendrocyte")
aba_human_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="human",datasetName="AIBS",useCell="Oligodendrocyte",sharedName="Oligodendrocytes",datasetGroup="Nuclei")

# LOAD TASIC
ctdFilePath = "/Users/natske/Box Sync/Patrick & Julien/celltype_data_TASIC_1to1only_level1_thresh0_trim0.rda"
keepCells = c("Astrocytes","Interneurons","Microglia","Oligodendrocytes","Pyramidal Neurons","Oligodendrocyte Precursor Cell")
tasic_mouse_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Tasic",useCell="Oligodendrocytes",sharedName="Oligodendrocytes",datasetGroup="Cell")

# LOAD DRONCSEQ-Mouse
ctdFilePath = "/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---Mouse DroncSeq/celltype_data_MouseDroncSeq_level1.rda"
keepCells = c("ASC","exCA","GABA","MG","OPC","ODC")
dronc_mouse_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="mouse",datasetName="Dronc Mouse",useCell="ODC",sharedName="Oligodendrocytes",datasetGroup="Nuclei")

# LOAD DRONCSEQ-Human
ctdFilePath = "/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---Human GTEx_droncseq_hip_pcf/CellTypeData_DroncSeqOldFormat_level1.rda"
keepCells = c("ASC","exCA","GABA","MG","OPC","ODC")
dronc_human_dist = prepare.specificity.comparison.across.datasets(ctdFilePath,keepCells,species="human",datasetName="Dronc Human",useCell="ODC",sharedName="Oligodendrocytes",datasetGroup="Nuclei")

# Merge the datasets into a list
allDataSets = list(mouseSS_dist,divseq_dist,aba_human_dist,tasic_mouse_dist,dronc_mouse_dist,dronc_human_dist)

# Find all possible comparisons
comparisons = get.group.comparisons(allDataSets)

comparisons$z = rep(0,length(comparisons$labels))
comparisons$p = rep(0,length(comparisons$labels))
for(cc in 1:length(comparisons$labels)){
    dd1 = allDataSets[[comparisons$indexed[1,cc]]]
    dd2 = allDataSets[[comparisons$indexed[2,cc]]]
    a = compare.datasets(dataset1=dd1,dataset2=dd2, geneListHGNC=geneListHGNC,orthologs=orthologs,sharedName="Oligodendrocytes")
    comparisons$z[cc] = a$values$z
    comparisons$p[cc] = a$values$p
}

res = data.frame(labels=comparisons$labels,groupLabels=comparisons$group_labels,z=comparisons$z)
thePlot = ggplot(res)+geom_bar(aes(x=labels,y=z),stat="identity")+
    facet_wrap(~groupLabels, strip.position = "bottom", scales = "free_x")+
    theme(axis.text.x = element_text(angle = 45, hjust = 1))+
    ylab("z")+xlab("")

for(ratio in c(1,1.5,1.8,2.1,2.5)){
    figName=sprintf("/Users/natske/Box Sync/LDSC_Paper/Figures/NucleiEnriched_list_%s_R%s.pdf",listN,ratio)
    save_plot(figName, thePlot, base_aspect_ratio = ratio)
}
```



Run analysis of whether dendritically enriched transcripts are depleted. Each dataset used as input should be reduced to have six celltypes:
- Pyramidal, Interneurons, Astrocytes, Oligodendrocytes, Oligodendrocyte Precursors and Microglia

```{r }
# LOAD ALLAN INSTITUTE DATA
load(file="/Users/natske/Box Sync/Patrick & Julien/celltype_data_ABI_HUMAN_MTG_FilteredGenes_level1_thresh0_trim0.rda")
human_dist = celltype_data[[1]]$all_scts
#human_dist = human_dist[,colnames(human_dist)!="Oligo_precursor"]
human_dist = human_dist/apply(human_dist,1,sum)
human_dist = human_dist[!is.na(human_dist[,"Glutamatergic"]),]
human_smax = cbind(Smax=apply(human_dist,1,max),dataset="Allan Institute Human Nuclei")
human_neuronal = cbind(S=human_dist[,"Glutamatergic"],dataset="Allan Institute Human Nuclei")

# LOAD KI MOUSE (using pyramidal SS)
load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_allKImouse_wtHypo_MergedStriatal_1to1only_level1_thresh0_trim0.rda")
mouseSS_dist = celltype_data[[1]]$all_scts[,c("astrocytes_ependymal","interneurons","microglia","Oligodendrocytes","pyramidal SS","Oligodendrocyte Precursor")] 
mouseSS_dist = mouseSS_dist/apply(mouseSS_dist,1,sum)
mouseSS_dist = mouseSS_dist[!is.na(mouseSS_dist$`pyramidal SS`),]
mouseSS_smax = cbind(Smax=apply(mouseSS_dist,1,max),dataset="All KI (cortical)")
mouseSS_neuronal = cbind(S=mouseSS_dist[,"pyramidal SS"],dataset="All KI (cortical)")

# LOAD KI MOUSE (using pyramidal CA1)
load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_allKImouse_wtHypo_MergedStriatal_1to1only_level1_thresh0_trim0.rda")
mouseCA1_dist = celltype_data[[1]]$all_scts[,c("astrocytes_ependymal","interneurons","microglia","Oligodendrocytes","pyramidal CA1","Oligodendrocyte Precursor")] 
mouseCA1_dist = mouseCA1_dist/apply(mouseCA1_dist,1,sum)
mouseCA1_dist = mouseCA1_dist[!is.na(mouseCA1_dist$`pyramidal CA1`),]
mouseCA1_smax = cbind(Smax=apply(mouseCA1_dist,1,max),dataset="All KI (hippocampal)")
mouseCA1_neuronal = cbind(S=mouseCA1_dist[,"pyramidal CA1"],dataset="All KI (hippocampal)")

# LOAD TASIC
load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_TASIC_1to1only_level1_thresh0_trim0.rda")
tasic_dist = celltype_data[[1]]$all_scts[,c("Astrocytes","Interneurons","Microglia","Oligodendrocytes","Pyramidal Neurons","Oligodendrocyte Precursor Cell")]
tasic_dist = tasic_dist/apply(tasic_dist,1,sum)
tasic_dist = tasic_dist[!is.na(tasic_dist[,"Pyramidal Neurons"]),]
tasic_smax = cbind(Smax=apply(tasic_dist,1,max),dataset="Tasic")
tasic_neuronal = cbind(S=tasic_dist[,"Pyramidal Neurons"],dataset="Tasic")

# LOAD DIVSEQ
load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_DivSeq_1to1only_level1_thresh0_trim0.rda")
divseq_dist = celltype_data[[1]]$all_scts[,c("Astrocytes","Hippocampal Interneuron","Microglia","Oligodendrocytes","Hippocampal CA1 Pyramidal Neuron","Oligodendrocyte Precursor")]
divseq_dist = divseq_dist/apply(divseq_dist,1,sum)
divseq_dist = divseq_dist[!is.na(divseq_dist[,"Hippocampal CA1 Pyramidal Neuron"]),]
divseq_smax = cbind(Smax=apply(divseq_dist,1,max),dataset="Div-Seq Hippocampus")
divseq_neuronal = cbind(S=divseq_dist[,"Hippocampal CA1 Pyramidal Neuron"],dataset="Div-Seq Hippocampus")

# LOAD DARMANIS... they don't seperate pyramidal+interneurons... invalidates
load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_HumanDarmanis_level1_thresh0_trim0.rda")
darmanis_dist = celltype_data[[1]]$all_scts[,c("astrocytes","Adult Cortical Neurons","fetal_replicating","microglia","oligodendrocytes","OPC")]
darmanis_dist = darmanis_dist/apply(darmanis_dist,1,sum)
darmanis_dist = darmanis_dist[!is.na(darmanis_dist[,"Adult Cortical Neurons"]),]
darmanis_smax = cbind(Smax=apply(darmanis_dist,1,max),dataset="Darmanis")
darmanis_neuronal = cbind(S=darmanis_dist[,"Adult Cortical Neurons"],dataset="Darmanis")

# LOAD QUAKE STRIATUM ... not really valid but whatever43
load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_StriatumQuake_1to1only_level1_thresh0_trim0.rda")
quake_dist = celltype_data[[1]]$all_scts[,c("Astro","Striatal Neuron","NSC","Microglia","Oligo","OPC")]
quake_dist = quake_dist/apply(quake_dist,1,sum)
quake_dist = quake_dist[!is.na(quake_dist[,"Striatal Neuron"]),]
quake_smax = cbind(Smax=apply(quake_dist,1,max),dataset="Quake Striatum")
quake_neuronal = cbind(S=quake_dist[,"Striatal Neuron"],dataset="Quake Striatum")

## Smax PLOT
#all_smax = rbind(quake_smax,darmanis_smax,divseq_smax,tasic_smax,mouseCA1_smax,mouseSS_smax,human_smax) %>% as.data.frame
all_smax = rbind(quake_smax,darmanis_smax,divseq_smax,tasic_smax,mouseSS_smax,human_smax) %>% as.data.frame
all_smax$Smax = as.numeric(as.character(all_smax$Smax))
pdf(file="SMax_AllDatasets_Density.pdf",width=5,height=5)
hist_plot = ggplot(all_smax)+geom_density(aes(x=Smax,fill=dataset),alpha=0.3)+graph_theme+
    ylab("Frequency Density")
hist_plot
dev.off()
pdf(file="SMax_AllDatasets_Boxplots.pdf",width=5,height=5)
box_plot = ggplot(all_smax)+geom_boxplot(aes(y=Smax,x=dataset),fill="blue")+graph_theme+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
box_plot
dev.off()

## Neuronal S PLOT
#all_smax = rbind(quake_smax,darmanis_smax,divseq_smax,tasic_smax,mouseCA1_smax,mouseSS_smax,human_smax) %>% as.data.frame
all_neuronal = rbind(quake_neuronal,darmanis_neuronal,divseq_neuronal,tasic_neuronal,mouseSS_neuronal,human_neuronal) %>% as.data.frame
all_neuronal$S = as.numeric(as.character(all_neuronal$S))
pdf(file="S_neuronal_AllDatasets_Density.pdf",width=5,height=5)
hist_plot = ggplot(all_neuronal)+geom_density(aes(x=S,fill=dataset),alpha=0.3)+graph_theme+
    ylab("Frequency Density")
hist_plot
dev.off()
pdf(file="S_neuronal_AllDatasets_Boxplots.pdf",width=5,height=5)
box_plot = ggplot(all_neuronal)+geom_boxplot(aes(y=S,x=dataset),fill="blue")+graph_theme+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
box_plot
dev.off()

# dataset1=mouse_dist=mouseSS_dist
# dataset2=human_dist
# species1="mouse";species2="human"
# col1="pyramidal SS"; col2="Glutamatergic"
# name1="All KI Mouse"; name2="Allan Institute Human Nuclei"




dn = data.frame(ki=c("Cortex KI Mouse","KI"),tasic=c("Tasic Cortex Mouse","Tasic"),abi=c("Allan Human Cortex Nuclei","AIBS"),divseq=c("Div-Seq Hippocampus","Habib"))
for(nV in 1:dim(dn)[1]){
    for(listN in c("dendrite_enriched_transcripts_HGNC_1to1only","Rbfox_binding","mPSD")){
        
        ki_vs_divseq = cbind(compare.datasets(dataset1=mouseSS_dist,species1="mouse",col1="pyramidal SS",name1=dn$ki[nV],
                         dataset2=divseq_dist,species2="mouse",col2="Hippocampal CA1 Pyramidal Neuron",name2=dn$divseq[nV],list_name=listN),type="Cell vs Nuclei")
        
        tasic_vs_divseq = cbind(compare.datasets(dataset1=tasic_dist,species1="mouse",col1="Pyramidal Neurons",name1=dn$tasic[nV],
                         dataset2=divseq_dist,species2="mouse",col2="Hippocampal CA1 Pyramidal Neuron",name2=dn$divseq[nV],list_name=listN),type="Cell vs Nuclei")
        
        ki_vs_tasic = cbind(compare.datasets(dataset1=mouseSS_dist,species1="mouse",col1="pyramidal SS",name1=dn$ki[nV],
                            dataset2=tasic_dist,species2="mouse",col2="Pyramidal Neurons",name2=dn$tasic[nV],list_name=listN),type="Cell vs Cell")
        
        ki_vs_abi = cbind(compare.datasets(dataset1=mouseSS_dist,species1="mouse",col1="pyramidal SS",name1=dn$ki[nV],
                         dataset2=human_dist,species2="human",col2="Glutamatergic",name2=dn$abi[nV],list_name=listN),type="Cell vs Nuclei")
        
        tasic_vs_abi = cbind(compare.datasets(dataset1=tasic_dist,species1="mouse",col1="Pyramidal Neurons",name1=dn$tasic[nV],
                         dataset2=human_dist,species2="human",col2="Glutamatergic",name2=dn$abi[nV],list_name=listN),type="Cell vs Nuclei")
        
        divseq_vs_abi = cbind(compare.datasets(dataset1=divseq_dist,species1="mouse",col1="Hippocampal CA1 Pyramidal Neuron",name1=dn$divseq[nV],dataset2=human_dist,species2="human",col2="Glutamatergic",name2=dn$abi[nV],list_name=listN),type="Nuclei vs Nuclei")
        
        all_res = rbind(divseq_vs_abi,tasic_vs_abi,ki_vs_abi,ki_vs_tasic,tasic_vs_divseq,ki_vs_divseq)
        
        countYl=0
        for(yLab in c("Z-score\n(dendritic transcripts depleted)","Z-score")){
            countYl=countYl+1
            #pdf(file=figName,width=5,height=5)
            thePlot = ggplot(all_res)+geom_bar(aes(x=comparison_name,y=z),stat="identity")+
                facet_wrap(~type, strip.position = "bottom", scales = "free_x")+
                theme(axis.text.x = element_text(angle = 45, hjust = 1))+
                ylab(yLab)+xlab("")
            #dev.off()
            for(ratio in c(1,1.5,1.8,2.1,2.5)){
                figName=sprintf("/Users/natske/Dropbox/LDSC_Paper/Figures/DendriticDepletion_nV%s_list_%s_yL%s_R%s.pdf",nV,listN,countYl,ratio)
                save_plot(figName, thePlot, base_aspect_ratio = ratio)
            }
        }
    }
}

tasic_dendritic = tasic_dist[dendritic_orth$MGI.symbol,"Pyramidal Neurons"]
kiSS_dendritic  = mouseSS_dist[dendritic_orth$MGI.symbol,"pyramidal SS"]
divseq_dendritic = divseq_dist[dendritic_orth$MGI.symbol,"Hippocampal CA1 Pyramidal Neuron"]
human_dendritic  = human_dist[dendritic_orth$HGNC.symbol,"Glutamatergic"]
all_dendritic = data.frame(Specificity=c(tasic_dendritic,kiSS_dendritic,divseq_dendritic,human_dendritic),
                           Dataset=c(rep("Tasic",length(tasic_dendritic)),
                           rep("KI mouse cortical",length(kiSS_dendritic)),
                           rep("Div-Seq",length(divseq_dendritic)),
                           rep("Allan Human Nuclei",length(human_dendritic))))
 graph_theme = theme_bw(base_size = 12, base_family = "Helvetica") +
     theme(legend.position = c(0.7, 0.85), panel.grid.major = element_line(size = .5, color = "grey"),
     axis.line = element_line(size=.7, color = "black"), text = element_text(size=14),
     axis.title.x = element_text(vjust = -0.35), axis.title.y = element_text(vjust = 0.6))+
     theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
     panel.background = element_blank(), axis.line = element_line(colour = "black"))
pdf(file="DendriticTranscripts_AllFour_Density.pdf",width=5,height=5)
hist_plot = ggplot(all_dendritic)+geom_density(aes(x=Specificity,fill=Dataset),alpha=0.3)+graph_theme+
    ylab("Frequency Density")
hist_plot
dev.off()
pdf(file="DendriticTranscripts_AllFour_Boxplots.pdf",width=5,height=5)
box_plot = ggplot(all_dendritic)+geom_boxplot(aes(y=Specificity,x=Dataset),fill="blue")+graph_theme+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
box_plot
dev.off()

















# LOAD THE DENDRITICALLY ENRICHED TRANSCRIPTS
library(dplyr)
load("/Users/natske/Google Drive/DiseaseEnrichment/pats_orthologs.rda")
dendritic = read.csv("/Users/natske/Google Drive/DiseaseLists/dendrite_enriched_transcripts.txt",stringsAsFactors = F)[,1][-1]
dendritic_orth = orthologs[orthologs$MGI.symbol %in% dendritic,] %>%
    filter(MGI.symbol %in% rownames(mouse_dist)) %>%
    filter(HGNC.symbol %in% rownames(human_dist)) %>%
    filter(MGI.symbol %in% rownames(tasic_dist))
all_orth = orthologs %>%
    filter(MGI.symbol %in% rownames(mouse_dist)) %>%
    filter(HGNC.symbol %in% rownames(human_dist)) %>%
    filter(MGI.symbol %in% rownames(tasic_dist))
diff = mean(mouse_dist[dendritic_orth$MGI.symbol,"pyramidal SS"]) - mean(human_dist[dendritic_orth$HGNC.symbol,"Glutamatergic"])
diff_tasic = mean(tasic_dist[dendritic_orth$MGI.symbol,"Pyramidal Neurons"]) - mean(human_dist[dendritic_orth$HGNC.symbol,"Glutamatergic"])
reps = 1000
diffs=rep(0,reps)
diffs_tasic=rep(0,reps)
for(i in 1:reps){
    randomgenes = sample(1:dim(all_orth)[1],dim(dendritic_orth))   
    diffs[i] = mean(mouse_dist[all_orth[randomgenes,]$MGI.symbol,"pyramidal SS"]) - mean(human_dist[all_orth[randomgenes,]$HGNC.symbol,"Glutamatergic"])
    diffs_tasic[i] = mean(tasic_dist[all_orth[randomgenes,]$MGI.symbol,"Pyramidal Neurons"]) - mean(human_dist[all_orth[randomgenes,]$HGNC.symbol,"Glutamatergic"])
}


#load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_allKImouse_level2_thresh0_trim0.rda")

glut = cell_dists$Glutamatergic
names(glut) = rownames(cell_dists)
```

Look into dynamic range

```{r }
#load("/Users/natske/Box Sync/Patrick & Julien/celltype_data_allKImouse_wtHypo_MergedStriatal_1to1only_level1_thresh0_trim0.rda")
#mouseSS_mean = celltype_data[[1]]$all_scts[,c("astrocytes_ependymal","interneurons","microglia","Oligodendrocytes","pyramidal SS","Oligodendrocyte Precursor")] 
load(file="/Users/natske/Google Drive/DiseaseEnrichment/merged_WITH_HYPO_mergedStriatal.Rda")
```

# Generate a couple of gene lists specific to DRONC-SEQ celltypes

```{r }
ctdFilePath = "/Users/natske/Datasets that are too large to store elsewhere/Cell type dataset---Human GTEx_droncseq_hip_pcf/CellTypeData_DroncSeqOldFormat_level1.rda"
load(ctdFilePath)
for(ct in colnames(ctd[[1]]$specificity)){
    ct_specific = names(ctd[[1]]$specificity[,ct][ctd[[1]]$specificity[,ct]>0.2])
    fileData = c(sprintf("DroncSeq Human genes with specificity greater than 20 percent for celltype %s",ct),"Created in DendriticEnrichment.Rmd",ct_specific)
    filePath = sprintf("/Users/natske/Google Drive/DiseaseLists/DRONCSEQ_HGNC_Specificity_%s.txt",ct)
    write.table(file=filePath,fileData,quote=FALSE,row.names = FALSE,col.names=FALSE)
}
```